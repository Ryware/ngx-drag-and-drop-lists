{"version":3,"file":"ngx-drag-and-drop-lists.mjs","sources":["../../../projects/ngx-drag-and-drop-lists/src/lib/services/constants.ts","../../../projects/ngx-drag-and-drop-lists/src/lib/services/DndState.ts","../../../projects/ngx-drag-and-drop-lists/src/lib/directives/dnd-list.ts","../../../projects/ngx-drag-and-drop-lists/src/lib/directives/dnd-draggable.ts","../../../projects/ngx-drag-and-drop-lists/src/lib/directives/dnd-nodrag.ts","../../../projects/ngx-drag-and-drop-lists/src/lib/directives/dnd-handle.ts","../../../projects/ngx-drag-and-drop-lists/src/lib/ngx-drag-and-drop-lists.module.ts","../../../projects/ngx-drag-and-drop-lists/src/public-api.ts","../../../projects/ngx-drag-and-drop-lists/src/ngx-drag-and-drop-lists.ts"],"sourcesContent":["// In standard-compliant browsers we use a custom mime type and also encode the dnd-type in it.\r\n// However, IE and Edge only support a limited number of mime types. The workarounds are described\r\n// in https://github.com/marceljuenemann/angular-drag-and-drop-lists/wiki/Data-Transfer-Design\r\nexport const MIME_TYPE: string = 'application/x-dnd';\r\nexport const EDGE_MIME_TYPE: string = 'application/json';\r\nexport const MSIE_MIME_TYPE: string = 'Text';\r\n\r\n// All valid HTML5 drop effects, in the order in which we prefer to use them.\r\nexport const ALL_EFFECTS: Effects[] = ['move', 'copy', 'link'];\r\n\r\nexport type Effects = 'move' | 'copy' | 'link';\r\n","import { Injectable } from '@angular/core';\r\nimport { ALL_EFFECTS } from './constants';\r\nimport { DndStateConfig } from './DndDraggableConfig';\r\n@Injectable()\r\nexport class DndState {\r\n    public dragState: DndStateConfig = {\r\n        isDragging: false,\r\n        itemType: undefined,\r\n        dropEffect: 'none',\r\n        effectAllowed: ALL_EFFECTS[0],\r\n    };\r\n\r\n    /**\r\n     * Filters an array of drop effects using a HTML5 effectAllowed string.\r\n     */\r\n    public filterEffects(effects: string[], effectAllowed: string) {\r\n        if (effectAllowed === 'all') return effects;\r\n        return effects.filter((effect) => {\r\n            return effectAllowed.toLowerCase().indexOf(effect) !== -1;\r\n        });\r\n    }\r\n}\r\n","import { Directive, Input, OnDestroy, OnInit, Output, ElementRef, HostListener, EventEmitter } from '@angular/core';\r\nimport {\r\n    DndState,\r\n    DndListSettings,\r\n    DndStateConfig,\r\n    ALL_EFFECTS,\r\n    MIME_TYPE,\r\n    EDGE_MIME_TYPE,\r\n    MSIE_MIME_TYPE,\r\n} from '../services';\r\nimport { Subject } from 'rxjs';\r\n\r\nexport const dropAccepted: Subject<any> = new Subject();\r\n\r\n@Directive({\r\n    selector: '[dndList]',\r\n})\r\nexport class DndList implements OnInit, OnDestroy {\r\n    @Input('dndList') public option: DndListSettings | undefined = {\r\n        disabled: false,\r\n        effectAllowed: 'move',\r\n        allowedTypes: undefined,\r\n    };\r\n    @Input('dndModel') public dndModel!: any[];\r\n    @Input() public set dndPlaceholder(placeholder: Element) {\r\n        this.placeholder = placeholder;\r\n        placeholder.parentNode?.removeChild(placeholder);\r\n    }\r\n    @Output('dndDragOver') public dndDragOver: EventEmitter<any> = new EventEmitter();\r\n    @Output('dndDrop') public dndDrop: EventEmitter<any> = new EventEmitter();\r\n    @Output('dndInserted') public dndInserted: EventEmitter<any> = new EventEmitter();\r\n    private dragState: DndStateConfig;\r\n    private nativeElement: HTMLElement;\r\n    private listSettings: {} = {};\r\n    private placeholder: Element;\r\n\r\n    constructor(\r\n        readonly element: ElementRef,\r\n        private readonly dndState: DndState,\r\n    ) {\r\n        this.dragState = dndState.dragState;\r\n        this.nativeElement = element.nativeElement;\r\n        this.placeholder = this.getPlaceholderElement();\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        // placeholder\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        // placeholder\r\n    }\r\n\r\n    @HostListener('dragenter', ['$event'])\r\n    public handleDragEnter(event: any): boolean {\r\n        event = event['originalEvent'] || event;\r\n        const mimeType: string | null = this.getMimeType(event.dataTransfer.types);\r\n        if (!mimeType || !this.isDropAllowed(this.getItemType(mimeType))) {\r\n            return true;\r\n        }\r\n\r\n        event.preventDefault();\r\n        return false;\r\n    }\r\n\r\n    @HostListener('dragover', ['$event'])\r\n    public handleDragOver(event: any): boolean {\r\n        event = event['originalEvent'] || event;\r\n        const mimeType: string | null = this.getMimeType(event.dataTransfer.types);\r\n        const itemType: string | null | undefined = this.getItemType(mimeType);\r\n        if (!mimeType || !this.isDropAllowed(itemType)) {\r\n            return true;\r\n        }\r\n        // Make sure the placeholder is shown, which is especially important if the list is empty.\r\n        if (this.placeholder.parentNode !== this.nativeElement) {\r\n            this.nativeElement.appendChild(this.placeholder);\r\n        }\r\n\r\n        if (event.target !== this.nativeElement) {\r\n            // Try to find the node direct directly below the list node.\r\n            let listItemNode: Node = event.target as Node;\r\n            while (listItemNode.parentNode !== this.nativeElement && listItemNode.parentNode) {\r\n                listItemNode = listItemNode.parentNode;\r\n            }\r\n\r\n            if (listItemNode.parentNode === this.nativeElement && listItemNode !== this.placeholder) {\r\n                let isFirstHalf: boolean;\r\n                // If the mouse pointer is in the upper half of the list item element,\r\n                // we position the placeholder before the list item, otherwise after it.\r\n                const rect: ClientRect = (listItemNode as Element).getBoundingClientRect();\r\n                if (this.option && this.option.horizontal) {\r\n                    isFirstHalf = event.clientX < rect.left + rect.width / 2;\r\n                } else {\r\n                    isFirstHalf = event.clientY < rect.top + rect.height / 2;\r\n                }\r\n                this.nativeElement.insertBefore(\r\n                    this.placeholder,\r\n                    isFirstHalf ? listItemNode : listItemNode.nextSibling);\r\n            }\r\n        }\r\n\r\n        // In IE we set a fake effectAllowed in dragstart to get the correct cursor, we therefore\r\n        // ignore the effectAllowed passed in dataTransfer. We must also not access dataTransfer for\r\n        // drops from external sources, as that throws an exception.\r\n        let ignoreDataTransfer: boolean = mimeType === MSIE_MIME_TYPE;\r\n        let dropEffect: string = this.getDropEffect(event, ignoreDataTransfer);\r\n        if (dropEffect === 'none') return this.stopDragOver();\r\n\r\n        // At this point we invoke the callback, which still can disallow the drop.\r\n        // We can't do this earlier because we want to pass the index of the placeholder.\r\n        // if (this.dndDragOver &&\r\n        //     !this.invokeCallback(this.dndDragOver, event, dropEffect, itemType)) {\r\n        //     return this.stopDragOver();\r\n        // }\r\n\r\n        event.preventDefault();\r\n        if (!ignoreDataTransfer) {\r\n            event.dataTransfer.dropEffect = dropEffect;\r\n        }\r\n\r\n        this.nativeElement.classList.add('dndDragover');\r\n        event.stopPropagation();\r\n        return false;\r\n    }\r\n\r\n    @HostListener('drop', ['$event'])\r\n    public handleDrop(event: any): boolean {\r\n        event = event['originalEvent'] || event;\r\n\r\n        // Check whether the drop is allowed and determine mime type.\r\n        let mimeType: string | null = this.getMimeType(event.dataTransfer.types);\r\n        let itemType: string | null | undefined = this.getItemType(mimeType);\r\n        if (!mimeType || !this.isDropAllowed(itemType)) return true;\r\n\r\n        // The default behavior in Firefox is to interpret the dropped element as URL and\r\n        // forward to it. We want to prevent that even if our drop is aborted.\r\n        event.preventDefault();\r\n\r\n        let data: any = undefined;\r\n        // Unserialize the data that was serialized in dragstart.\r\n        try {\r\n            data = JSON.parse(event.dataTransfer.getData(mimeType));\r\n        } catch (e) {\r\n            return this.stopDragOver();\r\n        }\r\n\r\n        // Drops with invalid types from external sources might not have been filtered out yet.\r\n        if (mimeType === MSIE_MIME_TYPE || mimeType === EDGE_MIME_TYPE) {\r\n            itemType = data.type || undefined;\r\n            data = data.item;\r\n            if (!this.isDropAllowed(itemType)) return this.stopDragOver();\r\n        }\r\n\r\n        // Special handling for internal IE drops, see dragover handler.\r\n        let ignoreDataTransfer: boolean = mimeType === MSIE_MIME_TYPE;\r\n        let dropEffect: string = this.getDropEffect(event, ignoreDataTransfer);\r\n        if (dropEffect === 'none') return this.stopDragOver();\r\n\r\n        // Invoke the callback, which can transform the transferredObject and even abort the drop.\r\n        let index: number = this.getPlaceholderIndex();\r\n        // create an offset to account for extra elements (including the placeholder element)\r\n        let offset: number = this.nativeElement.children.length - 1 - this.dndModel.length;\r\n        if (this.dndDrop) {\r\n            this.invokeCallback(this.dndDrop, event, dropEffect, itemType, index, data);\r\n            if (!data) return this.stopDragOver();\r\n        }\r\n\r\n        // The drop is definitely going to happen now, store the dropEffect.\r\n        this.dragState.dropEffect = dropEffect;\r\n        if (!ignoreDataTransfer) {\r\n            event.dataTransfer.dropEffect = dropEffect;\r\n        }\r\n\r\n        // Insert the object into the array, unless dnd-drop took care of that (returned true).\r\n        if (data !== true) {\r\n            // use the offset to create an insertionPoint\r\n            let insertionPoint: number = index - offset;\r\n            if (insertionPoint < 0) {\r\n                insertionPoint = 0;\r\n            }\r\n            this.dndModel.splice(insertionPoint, 0, data);\r\n        }\r\n        this.invokeCallback(this.dndInserted, event, dropEffect, itemType, index, data);\r\n\r\n        // Tell old object to handle itself\r\n        dropAccepted.next({ item: data, list: this.dndModel });\r\n\r\n        // Clean up\r\n        this.stopDragOver();\r\n        event.stopPropagation();\r\n        return false;\r\n    }\r\n\r\n    @HostListener('dragleave', ['$event'])\r\n    public handleDragLeave(event: any): void {\r\n        event = event['originalEvent'] || event;\r\n\r\n        let newTarget: Element | null = document.elementFromPoint(event.clientX, event.clientY);\r\n        if (this.nativeElement.contains(newTarget) && !event['_dndPhShown']) {\r\n            // Signalize to potential parent lists that a placeholder is already shown.\r\n            event['_dndPhShown'] = true;\r\n        } else {\r\n            this.stopDragOver();\r\n        }\r\n    }\r\n\r\n    private getPlaceholderElement(): Element {\r\n        let placeholder: Element | undefined = undefined;\r\n        if (this.nativeElement.children) {\r\n            for (let i: number = 1; i < this.nativeElement.children.length; i++) {\r\n                const child: Element | null = this.nativeElement.children.item(i);\r\n                if (child?.classList.contains('dndPlaceholder')) {\r\n                    placeholder = child;\r\n                }\r\n            }\r\n        }\r\n        let placeholderDefault: Element = document.createElement('li');\r\n        placeholderDefault.classList.add('dndPlaceholder');\r\n        return placeholder || placeholderDefault;\r\n    }\r\n\r\n    /**\r\n     * Given the types array from the DataTransfer object, returns the first valid mime type.\r\n     * A type is valid if it starts with MIME_TYPE, or it equals MSIE_MIME_TYPE or EDGE_MIME_TYPE.\r\n     */\r\n    private getMimeType(types: readonly string[]): string | null {\r\n        if (!types) return MSIE_MIME_TYPE; // IE 9 workaround.\r\n        for (let i: number = 0; i < types.length; i++) {\r\n            if (types[i] === MSIE_MIME_TYPE || types[i] === EDGE_MIME_TYPE ||\r\n                types[i].substr(0, MIME_TYPE.length) === MIME_TYPE) {\r\n                return types[i];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Determines the type of the item from the dndState, or from the mime type for items from\r\n     * external sources. Returns undefined if no item type was set and null if the item type could\r\n     * not be determined.\r\n     */\r\n    private getItemType(mimeType: string | null): string | null | undefined {\r\n        if (this.dragState.isDragging) return this.dragState.itemType || undefined;\r\n        if (mimeType === MSIE_MIME_TYPE || mimeType === EDGE_MIME_TYPE) return null;\r\n        return (mimeType && mimeType.substr(MIME_TYPE.length + 1)) || undefined;\r\n    }\r\n\r\n    /**\r\n     * Checks various conditions that must be fulfilled for a drop to be allowed, including the\r\n     * dnd-allowed-types attribute. If the item Type is unknown (null), the drop will be allowed.\r\n     */\r\n    private isDropAllowed(itemType: string |  null | undefined): boolean  {\r\n        if (this.option) {\r\n            if (this.option.disabled) return false;\r\n            if (this.option.max && this.dndModel.length === this.option.max) return false;\r\n            if (!this.option.externalSources && !this.dragState.isDragging) return false;\r\n            if (!this.option.allowedTypes || itemType === null) return true;\r\n        }\r\n        return !!itemType && this.option!.allowedTypes?.indexOf(itemType) !== -1;\r\n    }\r\n\r\n    /**\r\n     * Determines which drop effect to use for the given event. In Internet Explorer we have to\r\n     * ignore the effectAllowed field on dataTransfer, since we set a fake value in dragstart.\r\n     * In those cases we rely on dndState to filter effects. Read the design doc for more details:\r\n     * https://github.com/marceljuenemann/angular-drag-and-drop-lists/wiki/Data-Transfer-Design\r\n     */\r\n    private getDropEffect(event: DragEvent, ignoreDataTransfer: boolean): string {\r\n        let effects: string[] = Object.assign([], ALL_EFFECTS);\r\n        if (!ignoreDataTransfer) {\r\n            effects = this.dndState.filterEffects(effects, event.dataTransfer!.effectAllowed);\r\n        }\r\n        if (this.dragState.isDragging) {\r\n            effects = this.dndState.filterEffects(effects, this.dragState.effectAllowed);\r\n        }\r\n        if (this.option && this.option.effectAllowed) {\r\n            effects = this.dndState.filterEffects(effects, this.option.effectAllowed);\r\n        }\r\n        // MacOS automatically filters dataTransfer.effectAllowed depending on the modifier keys,\r\n        // therefore the following modifier keys will only affect other operating systems.\r\n        if (!effects.length) {\r\n            return 'none';\r\n        } else if (event.ctrlKey && effects.indexOf('copy') !== -1) {\r\n            return 'copy';\r\n        } else if (event.altKey && effects.indexOf('link') !== -1) {\r\n            return 'link';\r\n        } else {\r\n            return effects[0];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Small helper function that cleans up if we aborted a drop.\r\n     */\r\n    private stopDragOver(): boolean {\r\n        this.placeholder.parentNode?.removeChild(this.placeholder);\r\n        this.nativeElement.classList.remove('dndDragover');\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Invokes a callback with some interesting parameters and returns the callbacks return value.\r\n     */\r\n    private invokeCallback(\r\n        eventEmitter: EventEmitter<any>,\r\n        event: DragEvent, dropEffect: string,\r\n        itemType: string | null | undefined, index?: number, item?: any): boolean {\r\n        eventEmitter.emit({\r\n            dropEffect: dropEffect,\r\n            event: event,\r\n            external: !this.dragState.isDragging,\r\n            index: index !== undefined ? index : this.getPlaceholderIndex(),\r\n            item: item || undefined,\r\n            type: itemType,\r\n        });\r\n        return true;\r\n    }\r\n    /**\r\n     * We use the position of the placeholder node to determine at which position of the array the\r\n     * object needs to be inserted\r\n     */\r\n    private getPlaceholderIndex(): number {\r\n        // Remove the dragging element to get the correct index of the placeholder;\r\n        for (let i: number = 0; i < this.nativeElement.children.length; i++) {\r\n            if (this.nativeElement.children[i].classList.contains('dndDragging')) {\r\n                const child = this.nativeElement.children[i];\r\n                this.nativeElement.children[i].parentNode?.removeChild(child);\r\n                child.remove();\r\n                break;\r\n            }\r\n        }\r\n        return Array.prototype.indexOf.call(this.nativeElement.children, this.placeholder);\r\n    }\r\n}\r\n","import { Directive, Input, Output, OnDestroy, OnInit, ElementRef, HostListener, EventEmitter } from '@angular/core';\r\nimport { ALL_EFFECTS, DndDraggableConfig, DndState, DndStateConfig, EDGE_MIME_TYPE, MIME_TYPE, MSIE_MIME_TYPE } from '../services';\r\nimport { dropAccepted } from './dnd-list';\r\nimport { Subscription } from 'rxjs';\r\n@Directive({\r\n    selector: '[dndDraggable]',\r\n})\r\nexport class DndDraggable implements OnInit, OnDestroy {\r\n    @Input('dndDraggable') public option: DndDraggableConfig | undefined = <DndDraggableConfig>{ draggable: true };\r\n    @Input('dndType') public dndType!: string;\r\n    @Input('dndObject') public dndObject!: any;\r\n    @Input('dndDragDisabled') public set disableDrag(disable: string | boolean) {\r\n        if (disable !== undefined) {\r\n            this.element.nativeElement.setAttribute(this.draggableString, (!disable).toString());\r\n        }\r\n    }\r\n    @Output('dndDragStart') public dndDragStart: EventEmitter<any> = new EventEmitter();\r\n    @Output('dndDragEnd') public dndDragEnd: EventEmitter<any> = new EventEmitter();\r\n    @Output('dndCopied') public dndCopied: EventEmitter<any> = new EventEmitter();\r\n    @Output('dndLinked') public dndLinked: EventEmitter<any> = new EventEmitter();\r\n    @Output('dndMoved') public dndMoved: EventEmitter<any> = new EventEmitter();\r\n    @Output('dndCanceled') public dndCanceled: EventEmitter<any> = new EventEmitter();\r\n    @Output('dndSelected') public dndSelected: EventEmitter<any> = new EventEmitter();\r\n\r\n    private readonly dragState: DndStateConfig;\r\n    private dropSubscription?: Subscription;\r\n    private draggableString: string = 'draggable';\r\n    constructor(\r\n        private readonly element: ElementRef,\r\n        private readonly dndState: DndState,\r\n    ) {\r\n        this.dragState = dndState.dragState;\r\n        this.element.nativeElement.setAttribute(this.draggableString, 'true');\r\n        /**\r\n         * Workaround to make element draggable in IE9\r\n         */\r\n        this.element.nativeElement.onselectstart = function (): void {\r\n            if (this.dragDrop) this.dragDrop();\r\n        };\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        this.dropSubscription = dropAccepted.subscribe(({ item, list }) => {\r\n            // event = event['originalEvent'] || event;\r\n            if (JSON.stringify(this.dndObject) === JSON.stringify(item)) {\r\n                let cb: object = { copy: 'dndCopied', link: 'dndLinked', move: 'dndMoved', none: 'dndCanceled' };\r\n                if (this.dragState) {\r\n                    const copyObject = (cb as any)[this.dragState.effectAllowed];\r\n                    ((this as any)[copyObject] as EventEmitter<any>).emit();\r\n                }\r\n                this.dndDragEnd.emit();\r\n            }\r\n        });\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.dropSubscription?.unsubscribe();\r\n    }\r\n\r\n    @HostListener('dragstart', ['$event'])\r\n    public handleDragStart(event: DragEvent): void {\r\n\r\n        // disabled check\r\n        if (this.element.nativeElement.getAttribute(this.draggableString) === 'false')\r\n            return;\r\n\r\n        // init drag\r\n        this.dragState.isDragging = true;\r\n        this.dragState.itemType = this.dndType;\r\n        this.dragState.dropEffect = 'none';\r\n        if (!this.option) {\r\n            this.option = <DndDraggableConfig>{ draggable: true };\r\n        }\r\n        this.dragState.effectAllowed = this.option.effectAllowed || ALL_EFFECTS[0];\r\n        event.dataTransfer!.effectAllowed = this.dragState.effectAllowed;\r\n        // Internet Explorer and Microsoft Edge don't support custom mime types, see design doc:\r\n        // https://github.com/marceljuenemann/angular-drag-and-drop-lists/wiki/Data-Transfer-Design\r\n        let mimeType: string = MIME_TYPE + (this.dragState.itemType ? ('-' + this.dragState.itemType) : '');\r\n        try {\r\n            event.dataTransfer!.setData(mimeType, JSON.stringify(this.dndObject));\r\n        } catch (e) {\r\n            // Setting a custom MIME type did not work, we are probably in IE or Edge.\r\n            let data: string = JSON.stringify({ item: this.dndObject, type: this.dragState.itemType });\r\n            try {\r\n                event.dataTransfer!.setData(EDGE_MIME_TYPE, data);\r\n            } catch (e) {\r\n                // We are in Internet Explorer and can only use the Text MIME type. Also note that IE\r\n                // does not allow changing the cursor in the dragover event, therefore we have to choose\r\n                // the one we want to display now by setting effectAllowed.\r\n                let effectsAllowed: string[] = this.dndState.filterEffects(ALL_EFFECTS, this.dragState.effectAllowed);\r\n                event.dataTransfer!.effectAllowed = effectsAllowed[0] as any;\r\n                event.dataTransfer!.setData(MSIE_MIME_TYPE, data);\r\n            }\r\n        }\r\n\r\n        // add drag classes\r\n        this.element.nativeElement.classList.add('dndDragging');\r\n        setTimeout(\r\n            () => {\r\n                if (this.dragState.effectAllowed === 'move') {\r\n                    this.element.nativeElement.style.display = 'none';\r\n                }\r\n            });\r\n\r\n        // Try setting a proper drag image if triggered on a dnd-handle (won't work in IE).\r\n        if ((event as any)._dndHandle && event.dataTransfer?.setDragImage) {\r\n            event.dataTransfer!.setDragImage(this.element.nativeElement, 0, 0);\r\n        }\r\n\r\n        this.dndDragStart.emit();\r\n        event.stopPropagation();\r\n    }\r\n\r\n    @HostListener('dragend', ['$event'])\r\n    public handleDragEnd(event: DragEvent): void {\r\n        // Clean up\r\n        this.dragState.isDragging = false;\r\n        this.element.nativeElement.classList.remove('dndDragging');\r\n        this.element.nativeElement.style.removeProperty('display');\r\n        event.stopPropagation();\r\n        // In IE9 it is possible that the timeout from dragstart triggers after the dragend handler.\r\n        setTimeout((() => this.element.nativeElement.classList.remove('dndDraggingSource')), 0);\r\n    }\r\n\r\n    @HostListener('click', ['$event'])\r\n    public handleClick(event: any): void {\r\n\r\n        if (this.element.nativeElement.hasAttribute('dndSelected')) return;\r\n\r\n        event = event['originalEvent'] || event;\r\n\r\n        this.dndSelected.emit();\r\n\r\n        event.stopPropagation();\r\n    }\r\n}\r\n","import { Directive, ElementRef, HostListener } from '@angular/core';\r\nimport {\r\n    DndState,\r\n    DndStateConfig,\r\n} from '../services';\r\n@Directive({\r\n    selector: '[dndNoDrag]',\r\n})\r\n/**\r\n * Use the dnd-nodrag attribute inside of dnd-draggable elements to prevent them from starting\r\n * drag operations. This is especially useful if you want to use input elements inside of\r\n * dnd-draggable elements or create specific handle elements. Note: This directive does not work\r\n * in Internet Explorer 9.\r\n */\r\nexport class DndNoDrag {\r\n    private readonly dragState: DndStateConfig;\r\n    private nativeElement: HTMLElement;\r\n    private draggableString: string = 'draggable';\r\n    constructor(\r\n        readonly element: ElementRef,\r\n        readonly dndState: DndState,\r\n    ) {\r\n        this.dragState = dndState.dragState;\r\n        this.nativeElement = element.nativeElement;\r\n        this.nativeElement.setAttribute(this.draggableString, 'true');\r\n\r\n    }\r\n\r\n    @HostListener('dragstart', ['$event'])\r\n    public handleDragStart(event: any): void {\r\n        event = event['originalEvent'] || event;\r\n\r\n        if (!event['_dndHandle']) {\r\n            // If a child element already reacted to dragstart and set a dataTransfer object, we will\r\n            // allow that. For example, this is the case for user selections inside of input elements.\r\n            if (!(event.dataTransfer.types && event.dataTransfer.types.length)) {\r\n                event.preventDefault();\r\n            }\r\n            event.stopPropagation();\r\n        }\r\n    }\r\n\r\n    @HostListener('dragend', ['$event'])\r\n    public handleDragEnd(event: any): void {\r\n        event = event['originalEvent'] || event;\r\n\r\n        if (!event['_dndHandle']) {\r\n            event.stopPropagation();\r\n        }\r\n    }\r\n}\r\n","import { Directive, ElementRef, HostListener } from '@angular/core';\r\nimport { DndState, DndStateConfig } from '../services';\r\n@Directive({\r\n  selector: '[dndHandle]',\r\n})\r\n/**\r\n * Use the dnd-handle directive within a dnd-nodrag element in order to allow dragging with that\r\n * element after all. Therefore, by combining dnd-nodrag and dnd-handle you can allow\r\n * dnd-draggable elements to only be dragged via specific \"handle\" elements. Note that Internet\r\n * Explorer will show the handle element as drag image instead of the dnd-draggable element. You\r\n * can work around this by styling the handle element differently when it is being dragged. Use\r\n * the CSS selector .dndDragging:not(.dndDraggingSource) [dnd-handle] for that.\r\n */\r\nexport class DndHandle {\r\n  private readonly dragState: DndStateConfig;\r\n  private nativeElement: HTMLElement;\r\n  private draggableString: string = 'draggable';\r\n  constructor(readonly element: ElementRef, readonly dndState: DndState) {\r\n    this.dragState = dndState.dragState;\r\n    this.nativeElement = element.nativeElement;\r\n    this.nativeElement.setAttribute(this.draggableString, 'true');\r\n  }\r\n\r\n  @HostListener('dragstart', ['$event'])\r\n  public handleDragStart(event: any): void {\r\n    event = event['originalEvent'] || event;\r\n    event['_dndHandle'] = true;\r\n  }\r\n\r\n  @HostListener('dragend', ['$event'])\r\n  public handleDragEnd(event: any): void {\r\n    event = event['originalEvent'] || event;\r\n\r\n    if (!event['_dndHandle']) {\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { DndDraggable, DndHandle, DndList, DndNoDrag } from './directives';\nimport { DndState } from './services';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n    imports: [\n        CommonModule,\n    ],\n    exports: [\n        DndDraggable, DndHandle, DndList, DndNoDrag,\n    ],\n    declarations: [DndDraggable, DndHandle, DndList, DndNoDrag],\n    providers: [\n        DndState,\n    ],\n})\nexport class DndListModule {\n}\n\n","/*\n * Public API Surface of ngx-drag-and-drop-lists\n */\n\nexport * from './lib/ngx-drag-and-drop-lists.module';\nexport * from './lib/services';\nexport * from './lib/directives';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.DndState"],"mappings":"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"}